# Application name
spring.application.name=Catalogue

# Default profile: dev (H2)
spring.profiles.default=dev

# Kafka configuration (común)
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP}
# Deshabilitar KafkaAdmin auto de Spring por defecto para evitar reconexiones en background
spring.kafka.admin.enabled=false
spring.kafka.admin.fail-fast=false
spring.kafka.consumer.group-id=inventario-ms
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.listener.concurrency=${inventario.kafka.concurrency:3}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Usar ErrorHandlingDeserializer para capturar SerializationException y evitar loops
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# Permitimos que el ConsumerFactory propio sobreescriba el target type
spring.kafka.consumer.properties.spring.json.value.default.type=
# Timeouts genéricos
spring.kafka.properties.request.timeout.ms=2000
spring.kafka.properties.default.api.timeout.ms=2000

# Inventario Kafka
inventario.kafka.topic=ventas
inventario.kafka.sales-topic=ventas
inventario.kafka.concurrency=3
inventario.kafka.error.maxAttempts=3
inventario.kafka.error.backoff.ms=500
inventario.kafka.dlq.enabled=false
inventario.kafka.dlq.topicSuffix=.dlq
# Desactivar admin y creación de tópicos por defecto (se pueden habilitar por profile)
inventario.kafka.enabled=true
inventario.kafka.admin.enabled=false
inventario.kafka.create-topics=false
# Timeout del probe/AdminClient
inventario.kafka.connect.apiTimeout.ms=2000

# Server
server.port=${PORT:5000}
server.servlet.context-path=/api
server.forward-headers-strategy=framework

<<<<<<< HEAD
# Keycloak Client Config
keycloak.auth-server-url=${KEYCLOAK_URL}
keycloak.client-id=${KEYCLOAK_CLIENT_ID}
keycloak.client-secret=${CLIENT_SECRET_KEYCLOAK}
keycloak.origin-module=CATALOGUE
=======
# Communication (middleware)
communication.intermediary.url=http://localhost:8090

# Keycloak (client_credentials)
keycloak.token.url=http://localhost:8080/realms/ecommerce/protocol/openid-connect/token
keycloak.client-id=storage-app
keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}
keycloak.refresh.enabled=false

# Feature flags
communication.enabled=true

# Listener tolerance
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.properties.max.block.ms=5000



#keycloak.client-secret=Z7SLWFSpuWi2qP4GBUNFpkILxZpAakri


>>>>>>> origin/main
